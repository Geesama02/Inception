services:
  nginx:
    build: requirements/nginx/.
    container_name: nginx
    ports:
      - "8080:443"
      - "8081:8081"
    depends_on:
      - wordpress
    networks:
      - docker-network
    volumes:
      - wordpress_files:/var/www/html
    restart: on-failure
  wordpress:
    build: requirements/wordpress/.
    container_name: wordpress
    volumes:
      - wordpress_files:/var/www/html
    environment:
      WORDPRESS_DB_NAME: ${DATABASE_NAME}
      WORDPRESS_DB_HOST: ${WORDPRESS_DB_HOST}
      WORDPRESS_DB_USER: ${MARIADB_USER}
      WORDPRESS_USER_PASSWORD: ${MARIADB_USER_PASSWORD}
      WORDPRESS_URL: ${WORDPRESS_URL}
      WORDPRESS_TITLE: ${WORDPRESS_TITLE}
      WORDPRESS_ADMIN_USER: ${WORDPRESS_ADMIN_USER}
      WORDPRESS_ADMIN_PASSWORD: ${WORDPRESS_ADMIN_PASSWORD}
      WORDPRESS_ADMIN_EMAIL: ${WORDPRESS_ADMIN_EMAIL}
    expose:
      - 9000
    depends_on:
      - mariadb
    networks:
      - docker-network
    restart: on-failure
  mariadb:
    build: requirements/mariadb/.
    container_name: mariadb
    environment:
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MARIADB_USER: ${MARIADB_USER}
      MARIADB_USER_PASSWORD: ${MARIADB_USER_PASSWORD}
      DATABASE_NAME: ${DATABASE_NAME}
    volumes:
      - wordpress_data:/var/lib/mysql
    expose:
      - 3306
    networks:
      - docker-network
    restart: on-failure
  redis:
    build: requirements/bonus/redis/.
    container_name: redis
    volumes:
      - redis_data:/data
    expose:
      - 6379
    networks:
      - docker-network
    restart: on-failure
  ftp:
    build: 
      context: requirements/bonus/ftp/.
      args: 
        FTP_USER: ${FTP_USER}
        FTP_PASS: ${FTP_PASS}
    container_name: ftp
    volumes:
      - wordpress_files:/var/www/wp
    expose:
      - 21
      - 21000-21010
    networks:
      - docker-network
    restart: on-failure
    depends_on:
      - wordpress
  adminer:
    build: requirements/bonus/adminer/.
    container_name: adminer
    expose:
      - "8081:8081"
    networks:
      - docker-network
    restart: on-failure
  web:
    build: requirements/bonus/web/.
    container_name: web
    ports:
      - "8000:8000"
    networks:
      - docker-network
    restart: on-failure
  portainer:
    build: requirements/bonus/portainer/.
    container_name: portainer
    ports:
      - "9000:9000"
    networks:
      - docker-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    restart: on-failure

networks:
  docker-network:
    driver: bridge

volumes:
  wordpress_files:
  wordpress_data:
  redis_data:
  portainer_data: